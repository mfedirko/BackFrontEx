<beans   xmlns="http://www.springframework.org/schema/beans"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:jpa="http://www.springframework.org/schema/data/jpa"
        xmlns:context="http://www.springframework.org/schema/context"
         xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">
 
 <!-- Scans within the base package of the application for @Component classes to configure as beans -->
   
     <context:component-scan base-package="com.nouhoun.springboot.jwt.integration.repository"/>
     <context:component-scan base-package="com.nouhoun.springboot.jwt.integration.domain"/>
     <context:component-scan base-package="com.nouhoun.springboot.jwt.integration.service.impl"/>
     <context:component-scan base-package="com.nouhoun.springboot.jwt.integration.controller"/>
          
     <context:property-placeholder location="classpath:application.properties"/>
 
 
  <mvc:annotation-driven/>

    <mvc:resources mapping="/resources/**" location="/resources/"/>


  
    
    <bean id="messageSource"
    class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
  <property name="basename" value="classpath:org/springframework/security/messages"/>
</bean>
    
   
<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
<property name="contentNegotiationManager" ref="mvcContentNegotiationManager"/>
	  
	   <property name="viewResolvers">
        <list>

		        <bean			class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="order" value="2" />
			<property name="prefix">
				<value>/</value>
			</property>
			<property name="suffix">
				<value>.jsp</value>
			</property>
			</bean>
        
	 </list>
	 </property>

	  <property name="defaultViews">
		<list>
		  <!-- JSON View -->
		  <bean
			class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		  </bean>

		  
		 </list>
	  </property>


	</bean>
	
<!-- 	<bean id="contentNegotiationManager"  class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"> -->
<!--         <property name="favorPathExtension" value="true" /> -->
<!--         <property name="ignoreAcceptHeader" value="true"/> -->
<!--         <property name="useJaf" value="false"/> -->
<!--         <property name="defaultContentType" value="text/html" /> -->

<!--         <property name="mediaTypes"> -->
<!--             <map> -->
<!--                <entry key="html" value="text/html"/> -->
<!--                 <entry key="json" value="application/json"/> -->
<!--            </map> -->
<!--         </property> -->
<!--     </bean> -->

	<!-- If no extension matched, use JSP view -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="2" />
		<property name="prefix">
			<value>/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
    
 
<!--    <bean id="sessionFactory" -->
<!--       class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"> -->
      
<!--   		<property name="annotatedClasses"> -->
<!-- 			<list> -->
<!-- 				<value>com.nouhoun.springboot.jwt.integration.domain.Account</value> -->
<!-- 				<value>com.nouhoun.springboot.jwt.integration.domain.User</value> -->
<!-- 				<value>com.nouhoun.springboot.jwt.integration.domain.Transaction</value> -->
<!-- 				<value>com.nouhoun.springboot.jwt.integration.domain.Role</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
            
<!--         <property name="dataSource" -->
<!--           ref="dataSource"/> -->
          
          
<!--         <property name="packagesToScan" -->
<!--           value="com.nouhoun.springboot.jwt.integration.domain"/> -->
<!--         <property name="hibernateProperties"> -->
<!--             <props> -->
<!--                 <prop key="hibernate.dialect"> -->
<!--                    org.hibernate.dialect.MySQLDialect -->
<!--                 </prop> -->
<!--             </props> -->
<!--         </property> -->
<!--     </bean> -->






   <!-- This produces a container-managed EntityManagerFactory;
         rather than application-managed EntityManagerFactory as in case of LocalEntityManagerFactoryBean-->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <!-- This makes /META-INF/persistence.xml is no longer necessary -->
      <property name="packagesToScan" value="com.nouhoun.springboot.jwt.integration.domain" />
      <!-- JpaVendorAdapter implementation for Hibernate EntityManager.
           Exposes Hibernate's persistence provider and EntityManager extension interface -->
      <property name="jpaVendorAdapter">
         <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
      </property>
      <property name="jpaProperties">
         <props>
  			<prop key="hibernate.enable_lazy_load_no_trans">true</prop>
            <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
         </props>
      </property>
</bean>
 
    <bean id="dataSource"
      class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/concretepage"/>
        <property name="username" value="user"/>
        <property name="password" value="password"/>
    </bean>
    
    
 
<!--     <bean id="txManager" -->
<!--       class="org.springframework.orm.hibernate5.HibernateTransactionManager"> -->
<!--         <property name="sessionFactory" ref="sessionFactory"/> -->
<!--     </bean> -->

    <!-- This transaction manager is appropriate for applications that use a single JPA EntityManagerFactory for transactional data access.
        JTA (usually through JtaTransactionManager) is necessary for accessing multiple transactional resources within the same transaction. -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManagerFactory" />
   </bean>

    
    <tx:annotation-driven />
    
    
    
    
    
    
    
    
<!--     Service implementations -->
<!--     <bean id="genService" class="com.nouhoun.springboot.jwt.integration.service.impl.GenericServiceImpl"/> -->
<!--     <bean id="acctService" class="com.nouhoun.springboot.jwt.integration.service.impl.AccountServiceImpl"/> -->
<!--     <bean id="txnService" class="com.nouhoun.springboot.jwt.integration.service.impl.TransactionServiceImpl"/> -->
<!--     <bean id="usrService" class="com.nouhoun.springboot.jwt.integration.service.impl.UserServiceImpl"/> -->
    
    
      
<!-- <bean -->
<!--   id="txnController" -->
<!--   class="com.baeldung.di.spring.IndexApp" > -->
<!--     <property name="service" ref="indexService" /> -->
<!-- </bean>     -->
    
    
</beans>
 

     
	
     

    
     
 
